#!/usr/bin/env python

import io
import os
import sys

from sqlalchemy.schema import MetaData

from dotenv import load_dotenv
load_dotenv(".env.development")


PROJECT_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
sys.path.append(PROJECT_ROOT)


def run():
    from sandbox.persistence.database import engine

    metadata = MetaData(engine)
    metadata.reflect(bind=engine)

    models_module = os.path.join(PROJECT_ROOT, "sandbox", "models.py")

    print("[ bin/db-reflect ]", "Updating database models definition.")

    outfile = io.open(models_module, "w", encoding="utf-8")

    from sqlacodegen.codegen import CodeGenerator
    CodeGenerator(metadata).render(outfile)

    relative_models_path = models_module.replace(PROJECT_ROOT, "")[1:]
    print("[ bin/db-reflect ]   ", relative_models_path, "is updated")


if __name__ == "__main__":
    run()
